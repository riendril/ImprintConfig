#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row; };

    behaviors {
        layer_hold_or_toggle: layer_hold_or_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD_OR_TOGGLE";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&layer_hold_or_toggle 3 3  &kp C_VOLUME_DOWN  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_MINIMUM            &kp C_MUTE                 &kp C_PREVIOUS  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP
&kp GRAVE                  &kp N1             &kp N2                &kp N3                &kp N4           &kp N5                              &kp N6                     &kp N7          &kp N8            &kp N9      &kp N0             &kp MINUS
&mt RIGHT_ALT TAB          &kp Q              &kp W                 &kp E                 &kp R            &kp T                               &kp Y                      &kp U           &kp I             &kp O       &kp P              &kp BSLH
&mt LCTRL ESCAPE           &kp A              &kp S                 &kp D                 &kp F            &kp G                               &kp H                      &kp J           &kp K             &kp L       &kp SEMI           &kp SQT
&kp LSHFT                  &kp Z              &kp X                 &kp C                 &kp V            &kp B                               &kp N                      &kp M           &kp COMMA         &kp DOT     &kp FSLH           &kp RSHFT
                                              &kp LA(LEFT_CONTROL)  &kp LA(LEFT_GUI)                                                                                                      &kp RIGHT_GUI     &none
                                                                                          &kp SPACE        &key_repeat                &none    &layer_hold_or_toggle 5 5  &kp ENTER       &trans
                                                                                          &kp DELETE       &layer_hold_or_toggle 1 1  &mo 4    &none                      &mo 2           &kp BACKSPACE
            >;
        };

        symbol_layer {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5            &kp F6        &kp F7        &kp F8        &kp F9        &kp F10           &kp F11
&trans  &trans  &trans  &trans  &trans  &trans            &trans        &trans        &trans        &trans        &trans            &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans        &kp LA(LBKT)  &kp LA(RBKT)  &kp LA(PIPE)  &kp LS(AMPS)      &trans
&trans  &trans  &trans  &trans  &trans  &trans            &kp LS(FSLH)  &kp LA(LBRC)  &kp LA(RBRC)  &kp LA(AT)    &kp LS(LA(BSLH))  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans        &trans        &trans        &trans        &trans            &trans
                &trans  &trans                                                        &trans        &trans
                                &trans  &trans  &trans    &trans        &trans        &trans
                                &trans  &trans  &trans    &trans        &trans        &trans
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans    &trans    &trans        &trans     &trans  &trans
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans            &kp HOME  &trans    &trans        &kp END    &trans  &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans            &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans  &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans            &trans    &trans    &trans        &trans     &trans  &trans
                &trans  &kp N0                                                &trans        &trans
                                &trans  &trans  &trans    &trans    &trans    &trans
                                &trans  &trans  &trans    &trans    &trans    &trans
            >;
        };

        text_input_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans     &trans                 &trans  &trans       &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans     &trans                 &trans  &trans       &trans  &trans  &trans  &trans
&trans  &kp J   &kp Y   &kp O   &kp U      &kp MINUS              &kp Q   &kp G        &kp N   &kp W   &kp X   &trans
&trans  &kp H   &kp I   &kp E   &kp A      &kp DOT                &kp P   &kp D        &kp R   &kp S   &kp L   &kp Z
&trans  &kp K   &trans  &trans  &kp COMMA  &trans                 &kp B   &kp C        &kp M   &kp F   &kp V   &trans
                &trans  &trans                                                         &trans  &trans
                                &kp SPACE  &key_repeat  &trans    &trans  &key_repeat  &kp T
                                &trans     &trans       &trans    &trans  &trans       &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans       &trans        &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &trans        &rgb_ug RGB_TOG            &trans          &rgb_ug RGB_EFR  &trans           &rgb_ug RGB_EFF  &trans           &trans
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4               &trans          &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&sys_reset   &trans        &trans           &trans           &trans        &studio_unlock             &studio_unlock  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &trans        &trans           &trans           &trans        &trans                     &trans          &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 0        &trans        &trans           &trans           &trans        &trans                     &trans          &trans           &trans           &trans           &trans           &to 0
                           &trans           &trans                                                                                     &trans           &trans
                                                             &trans        &trans           &trans    &trans          &trans           &trans
                                                             &trans        &trans           &trans    &trans          &trans           &trans
            >;
        };

        Mouse_Layer {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans            &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans  &trans  &trans  &trans  &trans  &trans
                &trans     &trans                                                  &trans  &trans
                                      &trans     &trans  &trans    &trans  &trans  &trans
                                      &trans     &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};

//right hand trackball configuration

&trackball_peripheral_listener {
    input-processors =
        // this gets it to the default installation orientation,,,
        <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>;

    // activate layer 3 within 500ms of the trackball moving
    // <&zip_temp_layer 3 500>;
};

//left hand trackball configuration

&trackball_central_listener {
    input-processors =
        // this gets it to the default installation orientation,,,
        <&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling),,,
        <&zip_xy_scaler 1 3>,
        // make this trackball output scrolling events by default instead of cursor movement,,,
        <&zip_xy_to_scroll_mapper>,
        // invert vertical scrolling so that the view moves in the same direction as the top of the trackball.,,,
        <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
